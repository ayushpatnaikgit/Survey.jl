var documenterSearchIndex = {"docs":
[{"location":"performance/#Performance","page":"Performance","title":"Performance","text":"","category":"section"},{"location":"performance/#Grouping-by-a-single-column","page":"Performance","title":"Grouping by a single column","text":"","category":"section"},{"location":"performance/","page":"Performance","title":"Performance","text":"R","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"> library(survey)\n> library(microbenchmark)\n> data(api)\n> dclus1 <- svydesign(id = ~dnum, weights = ~pw, data = apiclus1, fpc = ~fpc)\n> microbenchmark(svyby(~api00, by = ~cname, design = dclus1, svymean, keep.var = FALSE), units = \"us\")","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Unit: microseconds\n                                                                   expr\n svyby(~api00, by = ~cname, design = dclus1, svymean, keep.var = FALSE)\n      min       lq     mean   median       uq      max neval\n 9427.043 10587.81 11269.22 10938.55 11219.24 17620.25   100","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Julia","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"using Survey, BenchmarkTools      \ndata(api)\ndclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc)\n@benchmark svyby(:api00, :cname, dclus1, svymean)","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"BenchmarkTools.Trial: 10000 samples with 1 evaluation.\n Range (min … max):  43.567 μs …   5.905 ms  ┊ GC (min … max): 0.00% … 90.27%\n Time  (median):     53.680 μs               ┊ GC (median):    0.00%\n Time  (mean ± σ):   58.090 μs ± 125.671 μs  ┊ GC (mean ± σ):  4.36% ±  2.00%","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"The median time is about 198 times lower in Julia as compared to R. ","category":"page"},{"location":"performance/#Grouping-by-two-columns.","page":"Performance","title":"Grouping by two columns.","text":"","category":"section"},{"location":"performance/","page":"Performance","title":"Performance","text":"R","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"> library(survey)\n> library(microbenchmark)\n> data(api)\n> dclus1 <- svydesign(id = ~dnum, weights = ~pw, data = apiclus1, fpc = ~fpc)\n> microbenchmark(svyby(~api00, by = ~cname+meals, design = dclus1, svymean, keep.var = FALSE), units = \"us\")","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Unit: microseconds\n                                                                                expr\n svyby(~api00, by = ~cname + meals, design = dclus1, svymean,      keep.var = FALSE)\n      min       lq     mean   median       uq      max neval\n 120823.6 131472.8 141797.3 134375.8 140818.3 263964.3   100","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Julia","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"using Survey, BenchmarkTools      \ndata(api)\ndclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc)\n@benchmark svyby(:api00, [:cname, :meals], dclus1, svymean)","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"BenchmarkTools.Trial: 10000 samples with 1 evaluation.\n Range (min … max):  64.591 μs …   6.559 ms  ┊ GC (min … max): 0.00% … 77.46%\n Time  (median):     78.204 μs               ┊ GC (median):    0.00%\n Time  (mean ± σ):   89.447 μs ± 235.344 μs  ┊ GC (mean ± σ):  8.48% ±  3.19%","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"The median time is about 1718 times lower in Julia as compared to R. ","category":"page"},{"location":"R_comparison/#Comparison-with-R","page":"Comparison with R","title":"Comparison with R","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"In the following examples, we'll compare Julia's performance to R's on the same set of operations.","category":"page"},{"location":"R_comparison/#Installing-and-loading-the-package","page":"Comparison with R","title":"Installing and loading the package","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"install.package(\"survey\")\nlibrary(survey)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"using Pkg\nPkg.add(url = \"https://github.com/xKDR/Survey.jl.git\")\nusing Survey","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The following command in the Pkg REPL may also be used to install the package. ","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"add \"https://github.com/xKDR/Survey.jl.git\"","category":"page"},{"location":"R_comparison/#API-data","page":"Comparison with R","title":"API data","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The Academic Performance Index is computed for all California schools based on standardised testing of students. The data sets contain information for all schools with at least 100 students and for various probability samples of the data. apiclus1 is a cluster sample of school districts, apistrat is a sample stratified by stype.","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"In the following examples, we'll use the apiclus1 data from the api dataset. ","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The api dataset can be loaded using the following command:","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"data(api) ","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"data(api)","category":"page"},{"location":"R_comparison/#svydesign","page":"Comparison with R","title":"svydesign","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The svydesign object combines a data frame and all the survey design information needed to analyse it.","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"A svydesign object can be constructed with the following command:","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"dclus1 <-svydesign(id = ~dnum, weights = ~pw, data = apiclus1, fpc = ~fpc)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"dclus1 = svydesign(id = :dnum, weights = :pw, data = apiclus1, fpc = :fpc)","category":"page"},{"location":"R_comparison/#svyby","page":"Comparison with R","title":"svyby","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The svyby function can be used to generate stratified estimates.","category":"page"},{"location":"R_comparison/#Mean","page":"Comparison with R","title":"Mean","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Weighted mean of a variable by strata can be computed using the following command: ","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(~api00, by = ~cname, design = dclus1, svymean)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(:api00, :cname, dclus1, svymean)","category":"page"},{"location":"R_comparison/#Sum","page":"Comparison with R","title":"Sum","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Weighted sum of a variable by strata can be computed using the following command: ","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(~api00, by = ~cname, design = dclus1, svytotal)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(:api00, :cname, dclus1, svytotal)","category":"page"},{"location":"R_comparison/#Quantile","page":"Comparison with R","title":"Quantile","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Weighted quantile of a variable by strata can be computed using the following command: ","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(~api00, by = ~cname, design = dclus1, svyquantile, quantile = 0.63)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(:api00, :cname, dclus1, svyquantile, 0.63)","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Survey","category":"page"},{"location":"#Survey","page":"Home","title":"Survey","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is the Julia implementation of the Survey package in R developed by Professor Thomas Lumley. ","category":"page"},{"location":"#The-need-for-moving-the-code-to-Julia.","page":"Home","title":"The need for moving the code to Julia.","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"At xKDR we processed millions of records from household surveys using the survey package in R. This process took hours of computing time. By implementing the code in Julia, we are able to do the processing in seconds. In this package we have implemented the functions svymean, svyquantile and svysum. We have kept the syntax between the two packages similar so that we can easily move our existing code to the new language.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Documentation for Survey.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Survey]","category":"page"},{"location":"#Survey.svydesign","page":"Home","title":"Survey.svydesign","text":"The svydesign object combines a data frame and all the survey design information needed to analyse it.\n\njulia> using Survey; \n\njulia> data(api); \n\njulia> dclus1 = svydesign(id= :dnum, weights= :pw, data = apiclus1, fpc= :fpc) |> print\nSurvey Design:\ndata: 183x40 DataFrame\nweights: pw\nid: dnum\nfpc: fpc\nnest: false\ncheck_strat: false\n\n\n\n\n\n","category":"type"},{"location":"#Survey.svyglm","page":"Home","title":"Survey.svyglm","text":"svyglm(formula, design, dist, link)\n\nThe svyglm function can be used to fit glms on svydesign.\n\njulia> using Survey      \n\njulia> data(api); \n\njulia> dclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc); \n\njulia> svyglm(@formula(ell~meals),dclus1,Normal(),IdentityLink())\nsvyglm(StatsModels.TableRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Normal{Float64}, IdentityLink}, GLM.DensePredChol{Float64, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}}}, Matrix{Float64}}\n\nell ~ 1 + meals\n\nCoefficients:\n────────────────────────────────────────────────────────────────────────\n                Coef.  Std. Error      z  Pr(>|z|)  Lower 95%  Upper 95%\n────────────────────────────────────────────────────────────────────────\n(Intercept)  6.86665   0.350512    19.59    <1e-84   6.17966    7.55364\nmeals        0.410511  0.00613985  66.86    <1e-99   0.398477   0.422545\n────────────────────────────────────────────────────────────────────────, [6.866653500690286, 0.41051064115199803], 183×40 DataFrame\n Row │ Column1  cds             stype    name             sname                          snum   dname                dnum   c ⋯\n     │ Int64    Int64           String1  String15         String                         Int64  String31             Int64  S ⋯\n─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │       1   1612910137588  H        San Leandro Hig  San Leandro High                 236  San Leandro Unified    637  A ⋯\n   2 │       2   1612916002372  E        Garfield Elemen  Garfield Elementary              237  San Leandro Unified    637  A\n   3 │       3   1612916002398  E        Jefferson Eleme  Jefferson Elementary             238  San Leandro Unified    637  A\n   4 │       4   1612916002414  E        Madison (James)  Madison (James) Elementary       239  San Leandro Unified    637  A\n   5 │       5   1612916002422  E        McKinley Elemen  McKinley Elementary              240  San Leandro Unified    637  A ⋯\n   6 │       6   1612916002430  E        Monroe Elementa  Monroe Elementary                241  San Leandro Unified    637  A\n   7 │       7   1612916002448  E        Roosevelt Eleme  Roosevelt Elementary             242  San Leandro Unified    637  A\n   8 │       8   1612916002455  E        Washington Elem  Washington Elementary            243  San Leandro Unified    637  A\n  ⋮  │    ⋮           ⋮            ⋮            ⋮                       ⋮                  ⋮             ⋮             ⋮      ⋱\n 177 │     177  43733876047633  E        Weller (Joseph)  Weller (Joseph) Elementary      5444  Milpitas Unified       448  S ⋯\n 178 │     178  43733876047641  E        Pomeroy (Marsha  Pomeroy (Marshall) Elementary   5445  Milpitas Unified       448  S\n 179 │     179  43733876047666  M        Rancho Milpitas  Rancho Milpitas Junior High     5446  Milpitas Unified       448  S\n 182 │     182  43733876047690  E        Burnett (Willia  Burnett (William) Elementary    5449  Milpitas Unified       448  S\n 183 │     183  43733876067219  E        Zanker (Pearl)   Zanker (Pearl) Elementary       5450  Milpitas Unified       448  S\n                                                                                                32 columns and 168 rows omitted, [33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373  …  33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373], 49195.421245741614, Normal{Float64}(μ=0.0, σ=1.0), 2, ell ~ 1 + meals, (ell = [22, 23, 27, 17, 27, 24, 10, 33, 36, 21  …  25, 17, 21, 26, 24, 29, 48, 13, 31, 30], meals = [19, 39, 39, 23, 43, 36, 17, 43, 48, 28  …  31, 18, 15, 41, 18, 33, 47, 23, 29, 26]), 1.0196009035970893e6, Float64[], [22.0, 23.0, 27.0, 17.0, 27.0, 24.0, 10.0, 33.0, 36.0, 21.0  …  25.0, 17.0, 21.0, 26.0, 24.0, 29.0, 48.0, 13.0, 31.0, 30.0], [14.66635568257825, 22.87656850561821, 22.87656850561821, 16.30839824718624, 24.518611070226203, 21.645036582162216, 13.845334400274252, 24.518611070226203, 26.57116427598619, 18.36095145294623  …  19.592483376402225, 14.255845041426252, 13.024313117970257, 23.697589787922205, 14.255845041426252, 20.41350465870622, 26.160653634834194, 16.30839824718624, 18.77146209409823, 17.539930170642236], [14.66635568257825, 22.87656850561821, 22.87656850561821, 16.30839824718624, 24.518611070226203, 21.645036582162216, 13.845334400274252, 24.518611070226203, 26.57116427598619, 18.36095145294623  …  19.592483376402225, 14.255845041426252, 13.024313117970257, 23.697589787922205, 14.255845041426252, 20.41350465870622, 26.160653634834194, 16.30839824718624, 18.77146209409823, 17.539930170642236], [33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373  …  33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373, 33.846996307373], [7.333644317421751, 0.12343149438179069, 4.123431494381791, 0.6916017528137601, 2.4813889297737965, 2.3549634178377836, -3.845334400274252, 8.481388929773797, 9.428835724013808, 2.6390485470537683  …  5.407516623597775, 2.7441549585737484, 7.975686882029743, 2.3024102120777954, 9.744154958573748, 8.58649534129378, 21.839346365165806, -3.30839824718624, 12.22853790590177, 12.460069829357764])\n\n\n\n\n\n","category":"type"},{"location":"#Survey.svyby","page":"Home","title":"Survey.svyby","text":"svyby(formula::Symbol, by::Vector{Symbol}, design::svydesign, func::Function, params = [])\n\nThe svyby function can be used to generate stratified estimates. A vector of columns can be used to groupby. \n\njulia> using Survey      \n\njulia> data(api); \n\njulia> dclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc); \n\njulia> svyby(:api00, [:cname, :meals], dclus1, svymean)\n\n\n\n\n\n","category":"function"},{"location":"#Survey.svyby-2","page":"Home","title":"Survey.svyby","text":"svyby(formula::Symbol, by::Symbol, design::svydesign, func::Function, params = [])\n\nThe svyby function can be used to generate stratified estimates.\n\njulia> using Survey      \n\njulia> data(api); \n\njulia> dclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc); \n\njulia> svyby(:api00, :cname, dclus1, svymean)\n11×2 DataFrame\n Row │ cname        api00   \n     │ String15     Float64 \n─────┼──────────────────────\n   1 │ Alameda      669.0\n   2 │ Fresno       472.0\n   3 │ Kern         452.5\n   4 │ Los Angeles  647.267\n   5 │ Mendocino    623.25\n   6 │ Merced       519.25\n   7 │ Orange       710.563\n   8 │ Plumas       709.556\n   9 │ San Diego    659.436\n  10 │ San Joaquin  551.189\n  11 │ Santa Clara  732.077\n\n\n\n\n\n","category":"function"},{"location":"#Survey.svyby-3","page":"Home","title":"Survey.svyby","text":"svyby(formula::Symbol, design::svydesign, func::Function, params = [])\n\nThe svyby function can be used to generate stratified estimates.\n\njulia> using Survey  \n\njulia> data(api); \n\njulia> dclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc);\n\njulia> svyby(:api00, dclus1, svymean)\n644.1693989071047\n\n\n\n\n\n","category":"function"}]
}
