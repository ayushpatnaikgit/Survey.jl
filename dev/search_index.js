var documenterSearchIndex = {"docs":
[{"location":"performance/#Performance","page":"Performance","title":"Performance","text":"","category":"section"},{"location":"performance/#Grouping-by-a-single-column","page":"Performance","title":"Grouping by a single column","text":"","category":"section"},{"location":"performance/","page":"Performance","title":"Performance","text":"R","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"> library(survey)\n> library(microbenchmark)\n> data(api)\n> dclus1 <- svydesign(id = ~dnum, weights = ~pw, data = apiclus1, fpc = ~fpc)\n> microbenchmark(svyby(~api00, by = ~cname, design = dclus1, svymean, keep.var = FALSE), units = \"us\")","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Unit: microseconds\n                                                                   expr\n svyby(~api00, by = ~cname, design = dclus1, svymean, keep.var = FALSE)\n      min       lq     mean   median       uq      max neval\n 9427.043 10587.81 11269.22 10938.55 11219.24 17620.25   100","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Julia","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"using Survey, BenchmarkTools\napiclus1 = load_data(\"apiclus1\")\ndclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc)\n@benchmark svyby(:api00, :cname, dclus1, svymean)","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"BenchmarkTools.Trial: 10000 samples with 1 evaluation.\n Range (min … max):  43.567 μs …   5.905 ms  ┊ GC (min … max): 0.00% … 90.27%\n Time  (median):     53.680 μs               ┊ GC (median):    0.00%\n Time  (mean ± σ):   58.090 μs ± 125.671 μs  ┊ GC (mean ± σ):  4.36% ±  2.00%","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"The median time is about 198 times lower in Julia as compared to R.","category":"page"},{"location":"performance/#Grouping-by-two-columns.","page":"Performance","title":"Grouping by two columns.","text":"","category":"section"},{"location":"performance/","page":"Performance","title":"Performance","text":"R","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"> library(survey)\n> library(microbenchmark)\n> data(api)\n> dclus1 <- svydesign(id = ~dnum, weights = ~pw, data = apiclus1, fpc = ~fpc)\n> microbenchmark(svyby(~api00, by = ~cname+meals, design = dclus1, svymean, keep.var = FALSE), units = \"us\")","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Unit: microseconds\n                                                                                expr\n svyby(~api00, by = ~cname + meals, design = dclus1, svymean,      keep.var = FALSE)\n      min       lq     mean   median       uq      max neval\n 120823.6 131472.8 141797.3 134375.8 140818.3 263964.3   100","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"Julia","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"using Survey, BenchmarkTools\napiclus1 = load_data(\"apiclus1\")\ndclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1, fpc=:fpc)\n@benchmark svyby(:api00, [:cname, :meals], dclus1, svymean)","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"BenchmarkTools.Trial: 10000 samples with 1 evaluation.\n Range (min … max):  64.591 μs …   6.559 ms  ┊ GC (min … max): 0.00% … 77.46%\n Time  (median):     78.204 μs               ┊ GC (median):    0.00%\n Time  (mean ± σ):   89.447 μs ± 235.344 μs  ┊ GC (mean ± σ):  8.48% ±  3.19%","category":"page"},{"location":"performance/","page":"Performance","title":"Performance","text":"The median time is about 1718 times lower in Julia as compared to R.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The following examples use the Academic Performance Index (API) dataset for Californian schools.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"svyby(formula::Symbol, by, design::svydesign, func::Function, params = [])","category":"page"},{"location":"examples/#Survey.svyby","page":"Examples","title":"Survey.svyby","text":"The svyby function can be used to generate subsets of a survey design.\n\njulia> using Survey\n\njulia> apiclus1 = load_data(\"apiclus1\");\n\njulia> dclus1 = svydesign(id=:1, weights=:pw, data = apiclus1);\n\njulia> svyby(:api00, :cname, dclus1, svymean)\n11×3 DataFrame\n Row │ cname        mean     SE\n     │ String15     Float64  Float64\n─────┼────────────────────────────────\n   1 │ Alameda      669.0    16.2135\n   2 │ Fresno       472.0     9.85278\n   3 │ Kern         452.5    29.5049\n   4 │ Los Angeles  647.267  23.5116\n   5 │ Mendocino    623.25   24.216\n   6 │ Merced       519.25   10.4925\n   7 │ Orange       710.562  28.9123\n   8 │ Plumas       709.556  13.2174\n   9 │ San Diego    659.436  12.2082\n  10 │ San Joaquin  551.189  11.578\n  11 │ Santa Clara  732.077  12.2291\n\n\n\n\n\n","category":"function"},{"location":"R_comparison/#Comparison-with-R","page":"Comparison with R","title":"Comparison with R","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"In the following examples, we'll compare Julia's performance to R's on the same set of operations.","category":"page"},{"location":"R_comparison/#Installing-and-loading-the-package","page":"Comparison with R","title":"Installing and loading the package","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"install.package(\"survey\")\nlibrary(survey)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"using Pkg\nPkg.add(url = \"https://github.com/xKDR/Survey.jl.git\")\nusing Survey","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The following command in the Pkg REPL may also be used to install the package.","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"add \"https://github.com/xKDR/Survey.jl.git\"","category":"page"},{"location":"R_comparison/#API-data","page":"Comparison with R","title":"API data","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The Academic Performance Index is computed for all California schools based on standardised testing of students. The data sets contain information for all schools with at least 100 students and for various probability samples of the data. apiclus1 is a cluster sample of school districts, apistrat is a sample stratified by stype.","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"In the following examples, we'll use the apiclus1 data from the api dataset.","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The api dataset can be loaded using the following command:","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"data(api)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"apiclus1 = load_data(\"apiclus1\")","category":"page"},{"location":"R_comparison/#svydesign","page":"Comparison with R","title":"svydesign","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The svydesign object combines a data frame and all the survey design information needed to analyse it.","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"A svydesign object can be constructed with the following command:","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"dclus1 <-svydesign(id = ~1, weights = ~pw, data = apiclus1, fpc = ~fpc)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"dclus1 = svydesign(id = :1, weights = :pw, data = apiclus1, fpc = :fpc)","category":"page"},{"location":"R_comparison/#svyby","page":"Comparison with R","title":"svyby","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"The svyby function can be used to generate stratified estimates.","category":"page"},{"location":"R_comparison/#Mean","page":"Comparison with R","title":"Mean","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Weighted mean of a variable by strata can be computed using the following command:","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(~api00, by = ~cname, design = dclus1, svymean)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(:api00, :cname, dclus1, svymean)","category":"page"},{"location":"R_comparison/#Sum","page":"Comparison with R","title":"Sum","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Weighted sum of a variable by strata can be computed using the following command:","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(~api00, by = ~cname, design = dclus1, svytotal)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(:api00, :cname, dclus1, svytotal)","category":"page"},{"location":"R_comparison/#Quantile","page":"Comparison with R","title":"Quantile","text":"","category":"section"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Weighted quantile of a variable by strata can be computed using the following command:","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"R","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(~api00, by = ~cname, design = dclus1, svyquantile, quantile = 0.63)","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"Julia","category":"page"},{"location":"R_comparison/","page":"Comparison with R","title":"Comparison with R","text":"svyby(:api00, :cname, dclus1, svyquantile, 0.63)","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Survey","category":"page"},{"location":"#Survey","page":"Home","title":"Survey","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is the Julia implementation of the Survey package in R developed by Professor Thomas Lumley.","category":"page"},{"location":"#The-need-for-moving-the-code-to-Julia.","page":"Home","title":"The need for moving the code to Julia.","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"At xKDR we processed millions of records from household surveys using the survey package in R. This process took hours of computing time. By implementing the code in Julia, we are able to do the processing in seconds. In this package we have implemented the functions svymean, svyquantile and svysum. We have kept the syntax between the two packages similar so that we can easily move our existing code to the new language.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Documentation for Survey.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Survey]","category":"page"},{"location":"#Survey.svydesign","page":"Home","title":"Survey.svydesign","text":"The svydesign object combines a data frame and all the survey design information needed to analyse it.\n\njulia> using Survey;\n\njulia> apiclus1 = load_data(\"apiclus1\");\n\njulia> dclus1 = svydesign(id= :dnum, weights= :pw, data = apiclus1, fpc= :fpc) |> print\nSurvey Design:\nvariables: 183x44 DataFrame\nid: dnum\nstrata: 1, 1, 1 ... (length = 183)\nprobs: 0.029544719150814778, 0.029544719150814778, 0.029544719150814778 ... (length = 183)\nfpc:\n    popsize: 757, 757, 757 ... (length = 183)\n    sampsize: 183, 183, 183 ... (length = 183)\nnest: false\ncheck_strat: true\n\n\n\n\n\n","category":"type"},{"location":"#Survey.svyglm","page":"Home","title":"Survey.svyglm","text":"svyglm(formula, design, dist, link)\n\nThe svyglm function can be used to fit glms on svydesign.\n\njulia> using Survey\n\njulia> apiclus1 = load_data(\"apiclus1\");\n\njulia> dclus1 = svydesign(id=:dnum, weights=:pw, data = apiclus1);\n\njulia> svyglm(@formula(ell~meals),dclus1,Normal(),IdentityLink())\n\n\n\n\n\n\n","category":"type"},{"location":"#Survey.colnames-Tuple{svydesign}","page":"Home","title":"Survey.colnames","text":"colnames(design)\n\nGet the column names of a survey design.\n\njulia> using Survey\n\njulia> apistrat = load_data(\"apistrat\");\n\njulia> dstrat = svydesign(data = apistrat, id = :1, strata = :stype, weights = :pw, fpc = :fpc);\n\njulia> colnames(dstrat)\n44-element Vector{String}:\n \"Column1\"\n \"cds\"\n \"stype\"\n \"name\"\n \"sname\"\n \"snum\"\n \"dname\"\n \"dnum\"\n \"cname\"\n \"cnum\"\n ⋮\n \"emer\"\n \"enroll\"\n \"api.stu\"\n \"pw\"\n \"fpc\"\n \"probs\"\n \"popsize\"\n \"sampsize\"\n \"strata\"\n\n\n\n\n\n","category":"method"},{"location":"#Survey.dim-Tuple{svydesign}","page":"Home","title":"Survey.dim","text":"dim(design)\n\nGet the dimensions of a survey design.\n\njulia> using Survey\n\njulia> apistrat = load_data(\"apistrat\");\n\njulia> dstrat = svydesign(data = apistrat, id = :1, strata = :stype, weights = :pw, fpc = :fpc);\n\njulia> dim(dstrat)\n(200, 44)\n\n\n\n\n\n","category":"method"},{"location":"#Survey.dimnames-Tuple{svydesign}","page":"Home","title":"Survey.dimnames","text":"dimnames(design)\n\nGet the names of the rows and columns of a survey design.\n\njulia> using Survey\n\njulia> apistrat = load_data(\"apistrat\");\n\njulia> dstrat = svydesign(data = apistrat, id = :1, strata = :stype, weights = :pw, fpc = :fpc);\n\njulia> dimnames(dstrat)\n2-element Vector{Vector{String}}:\n [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"  …  \"191\", \"192\", \"193\", \"194\", \"195\", \"196\", \"197\", \"198\", \"199\", \"200\"]\n [\"Column1\", \"cds\", \"stype\", \"name\", \"sname\", \"snum\", \"dname\", \"dnum\", \"cname\", \"cnum\"  …  \"full\", \"emer\", \"enroll\", \"api.stu\", \"pw\", \"fpc\", \"probs\", \"popsize\", \"sampsize\", \"strata\"]\n\n\n\n\n\n","category":"method"},{"location":"#Survey.freedman_diaconis-Tuple{AbstractVector}","page":"Home","title":"Survey.freedman_diaconis","text":"freedman_diaconis(v::AbstractVector)\n\nCalculate the number of bins to use in a histogram using the Freedman-Diaconis rule.\n\nExamples\n\njulia> freedman_diaconis([10, 20, 30, 40, 50])\n2\n\n\n\n\n\n","category":"method"},{"location":"#Survey.freedman_diaconis-Tuple{DataFrames.DataFrame, Symbol}","page":"Home","title":"Survey.freedman_diaconis","text":"freedman_diaconis(df::DataFrame, var::Symbol)\n\nCalculate the number of bins for a DataFrame variable.\n\nExamples\n\njulia> using DataFrames\n\njulia> df = DataFrame((a=[1, 2, 3, 4, 5], b=[10, 20, 30, 40, 50]));\n\njulia> freedman_diaconis(df, :b)\n2\n\n\n\n\n\n","category":"method"},{"location":"#Survey.freedman_diaconis-Tuple{svydesign, Symbol}","page":"Home","title":"Survey.freedman_diaconis","text":"freedman_diaconis(design::svydesign, var::Symbol)\n\nCalculate the number of bins for a survey design variable.\n\nExamples\n\njulia> apistrat = load_data(\"apistrat\");\n\njulia> dstrat = svydesign(data = apistrat, id = :1, strata = :stype, weights = :pw, fpc = :fpc);\n\njulia> freedman_diaconis(dstrat, :enroll)\n15\n\n\n\n\n\n","category":"method"},{"location":"#Survey.load_data-Tuple{Any}","page":"Home","title":"Survey.load_data","text":"The Academic Performance Index is computed for all California schools based on standardised testing of students. The data sets contain information for all schools with at least 100 students and for various probability samples of the data.\n\nUse load_data(name) to load API data, with name ∈ [\"apiclus1\", \"apiclus2\", \"apipop\", \"apistrat\", \"apisrs\"] being the name of the dataset.\n\ndf = load_data(\"apiclus1\")\n\nDetails about the columns of the dataset can be found here: https://r-survey.r-forge.r-project.org/survey/html/api.html\n\nThe API program has been discontinued at the end of 2018. Information is archived at https: //www.cde.ca.gov/re/pr/api.asp\n\n\n\n\n\n","category":"method"},{"location":"#Survey.sturges-Tuple{DataFrames.DataFrame, Symbol}","page":"Home","title":"Survey.sturges","text":"sturges(df::DataFrame, var::Symbol)\n\nCalculate the number of bins for a DataFrame variable.\n\nExamples\n\njulia> using DataFrames\n\njulia> df = DataFrame((a=[1, 2, 3, 4, 5], b=[10, 20, 30, 40, 50]))\n5×2 DataFrame\n Row │ a      b\n     │ Int64  Int64\n─────┼──────────────\n   1 │     1     10\n   2 │     2     20\n   3 │     3     30\n   4 │     4     40\n   5 │     5     50\n\njulia> sturges(df, :b)\n4\n\n\n\n\n\n","category":"method"},{"location":"#Survey.sturges-Tuple{Integer}","page":"Home","title":"Survey.sturges","text":"sturges(v)\n\nCalculate the number of bins to use in a histogram using the Sturges rule.\n\nExamples\n\njulia> sturges(10)\n5\n\njulia> sturges([10, 20, 30, 40, 50])\n4\n\n\n\n\n\n","category":"method"},{"location":"#Survey.sturges-Tuple{svydesign, Symbol}","page":"Home","title":"Survey.sturges","text":"sturges(design::svydesign, var::Symbol)\n\nCalculate the number of bins for a survey design variable.\n\nExamples\n\njulia> apistrat = load_data(\"apistrat\");\n\njulia> dstrat = svydesign(data = apistrat, id = :1, strata = :stype, weights = :pw, fpc = :fpc);\n\njulia> sturges(dstrat, :enroll)\n9\n\n\n\n\n\n","category":"method"},{"location":"#Survey.svyhist","page":"Home","title":"Survey.svyhist","text":"svyhist(design, var, bins = freedman_diaconis; normalization = :density, weights = ones(size(design.variables, 1), ...)\n\nHistogram plot of a survey design variable given by var.\n\nbins can be an Integer specifying the number of equal-width bins, an AbstractVector specifying the bins intervals, or a Function specifying the function used for calculating the number of bins. The possible functions are sturges and freedman_diaconis.\n\nThe normalization can be set to :none, :density, :probability or :pdf. See Makie.hist for more information.\n\nThe weights argument can be an AbstractVector or a Symbol specifying a design variable.\n\nFor the complete argument list see Makie.hist.\n\njulia> using Survey\n\njulia> apistrat = load_data(\"apistrat\");\n\njulia> dstrat = svydesign(data = apistrat, id = :1, strata = :stype, weights = :pw, fpc = :fpc);\n\njulia> h = svyhist(dstrat, :enroll)\n\n(Image: )\n\n\n\n\n\n","category":"function"},{"location":"#Survey.svyplot-Tuple{svydesign, Symbol, Symbol}","page":"Home","title":"Survey.svyplot","text":"\tsvyplot(design, x, y; weights, kwargs...)\n\nScatter plot of survey design variables x and y.\n\nWeights can be specified by a Symbol or an AbstractVector passed to the keyword argument weights.\n\nFor the complete argument list see Makie.scatter.\n\njulia> using Survey\n\njulia> apistrat = load_data(\"apistrat\");\n\njulia> dstrat = svydesign(data = apistrat, id = :1, strata = :stype, weights = :pw, fpc = :fpc);\n\njulia> s = svyplot(dstrat, :api99, :api00; weights = :pw)\n\n(Image: )\n\n\n\n\n\n","category":"method"}]
}
